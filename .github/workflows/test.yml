defaults:
    run:
        shell: bash

on:
    workflow_dispatch:
      inputs:
        rs-create-watcher:
          description: 'rs-create-watcher (Select "true" to build)'
          required: true
          default: 'false'
          type: choice
          options:
            - 'true'
            - 'false'
        ms-notification-decode:
          description: 'ms-notification-decode (Select "true" to build)'
          required: true
          default: 'false'
          type: choice
          options:
            - 'true'
            - 'false'
jobs:

  test-job:
      runs-on: ubuntu-latest
      steps:
          run: |
              set -e
              set -x
              echo "test"
            
  deploy-cf-to-canary:
        runs-on: ubuntu-latest
        env:
          RS-CREATE-WATCHER-WORKDIR: 'python/rs-create-watcher'
          MS-NOTIFICATION-WORKDIR: 'python/ms-notification-decode'
        steps:
          - name: Build Functions
            id: build-functions
            run: |
              set -easdsadsadsadsadasd
              declare -A build_functions
              build_functions["rs-create-watcher"]=${{ github.event.inputs.rs-create-watcher }}
              build_functions["ms-notification-decode"]=${{ github.event.inputs.ms-notification-decode }}
              echo -e "\nFunctions to build and deploy:\n"
              for key in "${!build_functions[@]}"; do
                value="${build_functions[$key]}"
                echo "$key ===> $value"
                if [[ $value == 'true' ]]; then
                  echo -e "\nProceeding to build $key!"
                  echo "Changing dir to python/${key}!"
                  echo "zipping contents of $key!"
                  echo "Initiating command with gcloud - gcloud functions deploy $key --source=gs://test-test-gcf-${key}/${key}.zip --gen2 --region=europe-west2"
                  echo -e "[INFO] Done with $key!\n\n"
                fi
              done
